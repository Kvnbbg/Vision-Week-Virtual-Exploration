apiVersion: apps/v1
kind: Deployment
metadata:
  name: vision-week-app
  namespace: vision-week
  labels:
    app: vision-week-virtual-exploration
    component: app
    version: "2.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: vision-week-virtual-exploration
      component: app
  template:
    metadata:
      labels:
        app: vision-week-virtual-exploration
        component: app
        version: "2.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
        - name: app
          image: vision-week/app:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: APP_ENV
              valueFrom:
                configMapKeyRef:
                  name: vision-week-config
                  key: APP_ENV
            - name: APP_DEBUG
              valueFrom:
                configMapKeyRef:
                  name: vision-week-config
                  key: APP_DEBUG
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: vision-week-secrets
                  key: APP_KEY
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: vision-week-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: vision-week-config
                  key: DB_PORT
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: vision-week-config
                  key: DB_DATABASE
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_PASSWORD
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: vision-week-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: vision-week-config
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: REDIS_PASSWORD
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: vision-week-secrets
                  key: JWT_SECRET
          volumeMounts:
            - name: app-uploads
              mountPath: /var/www/html/storage/uploads
            - name: app-logs
              mountPath: /var/log
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
      volumes:
        - name: app-uploads
          persistentVolumeClaim:
            claimName: app-uploads-pvc
        - name: app-logs
          persistentVolumeClaim:
            claimName: app-logs-pvc
        - name: nginx-config
          configMap:
            name: nginx-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000

---
apiVersion: v1
kind: Service
metadata:
  name: vision-week-app-service
  namespace: vision-week
  labels:
    app: vision-week-virtual-exploration
    component: app
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app: vision-week-virtual-exploration
    component: app

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vision-week-app-pdb
  namespace: vision-week
  labels:
    app: vision-week-virtual-exploration
    component: app
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: vision-week-virtual-exploration
      component: app

